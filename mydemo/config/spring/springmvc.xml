<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
              http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
     
       <mvc:resources location="/js/" mapping="/js/**"/>  
       <mvc:resources location="/img/" mapping="/img/**"/> 
       
        
       <!-- 注解的映射器 -->
       <!--  <bean class = "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" /> -->
       <!-- 注解的适配器 -->
       <!-- <bean class = "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />   -->
       
       
       <!-- 使用组件扫描 Controller-->
       <context:component-scan base-package="cn.itcast.ssm.controller"></context:component-scan>
       
       <!-- 使用 mvc:annotation-driven可以代替上面配置的基于注解方式的映射器和适配器
             并且默认加载许多参数的绑定方法，建议使用
       -->
       <mvc:annotation-driven conversion-service="conversionService" 
       validator="validator"></mvc:annotation-driven>
        
            
       <!-- 配置视图解析器 解析jsp,默认使用jstl标签，classpath下得有jstl的包-->
            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
           <!-- 配置jsp路径的前缀 --> 
            <property name="prefix" value="/WEB-INF/jsp/"/>
           <!-- 配置jsp路径的后缀 -->
            <property name="suffix" value=".jsp"/>
           </bean>
            
     <!-- 注册转换器 -->  
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">  
        <property name="converters">  
            <list>  
            	<!-- 日期类型的转换 -->
                <bean class="cn.itcast.ssm.controller.converter.CustomDateConverter"/>  
                <!--  日期类型的转换 -->
                <bean class="cn.itcast.ssm.controller.converter.StringTrimConverter"/>  
            </list>  
        </property>  
    </bean>  
       
    <!-- 校验器 -->
    <bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <!-- hibernate校验器-->
    <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
    <!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
    <property name="validationMessageSource" ref="messageSource" />
    </bean>
    <!-- 配置：校验错误信息配置文件 -->
     <bean id="messageSource"
      class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <!-- 资源文件名-->
    <property name="basenames">
        <list>
            <value>classpath:CustomValidationMessages</value><!-- 这里不用加后缀properties是因为name是basenames -->
        </list>
    </property>
    <!-- 资源文件编码格式 -->
    <property name="fileEncodings" value="utf-8" />
    <!-- 对资源文件内容缓存时间，单位秒 -->
    <property name="cacheSeconds" value="120" /><!-- 资源过了120秒重新加载 -->
	</bean>
	
	<!-- 全局异常处理器 -->
	<bean  class="cn.itcast.ssm.exception.CustomExceptionResolver" ></bean>
	
	<!-- 文件上传 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 设置上传文件的最大尺寸为5MB -->  
        <property name="maxUploadSize">  
            <value>5242880</value>  
        </property>  
    </bean>  
	
	<!-- 拦截器 -->  
    <mvc:interceptors>  
        <!-- 多个拦截器,顺序执行 -->  
         <mvc:interceptor>  
         	<!-- 拦截所有请求 -->
            <mvc:mapping path="/**"/>  
            <bean class="cn.itcast.ssm.interceptor.LoginInterceptor"></bean>  
        </mvc:interceptor>
        <mvc:interceptor>  
            <mvc:mapping path="/**"/>  
            <bean class="cn.itcast.ssm.interceptor.HandlerInterceptor1"></bean>  
        </mvc:interceptor>  
        <mvc:interceptor>  
            <mvc:mapping path="/**"/>  
            <bean class="cn.itcast.ssm.interceptor.HandlerInterceptor1"></bean>  
        </mvc:interceptor>  
    </mvc:interceptors>  
	
	
 </beans>